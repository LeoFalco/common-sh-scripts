#!/usr/bin/env zx

import 'zx/globals'
import YAML from 'yaml'


const currentBranch = await getCurrentBranch()

await forcePush(currentBranch)

const repoFullPath = await getRepoFullPath()

const prefix = await getPrefix(repoFullPath)

const commitMessage = await getCommitMessage()

const prTitle = `${prefix} ${commitMessage}`.trim()

const prTemplatePath = await getPrTemplatePath(repoFullPath)

await createPullRequest({ prTitle, prTemplatePath })


async function createPullRequest({ prTitle, prTemplatePath }) {
  const bodyFileParam = fs.existsSync(prTemplatePath)
  ? `--body-file ${prTemplatePath}`
  : ''

  const reviewers = [
    'leoFalco',
    // 'willaug',
    // 'anselmoj',
    // 'caiorsantanna',
    // 'Giovani-f',
    // 'godinhojoao',
    // 'IgorMoraes15',
    // 'lfreneda',
    // 'ottonielmatheus',
    // 'thalescrosa',
    // 'victorreinor',
    // 'ThayDias'
  ]

  await $`gh pr create -a @me --title ${prTitle} ${bodyFileParam} --reviewer ${reviewers}`
  await $`gh pr view -w`
}

async function getCommitMessage() {
  return (await $`git log -1 --pretty=%B`).stdout.trim().split('\n')[0].replace(/^.*:/, '')
}

async function getPrTemplatePath(repoFullPath) {
  return `${repoFullPath}/.github/pull_request_template.md`
}

async function getRepoFullPath() {
  return (await $`git rev-parse --show-toplevel`).stdout.trim()
}

async function getCurrentBranch(){
  return  (await $`git rev-parse --abbrev-ref HEAD`).stdout.trim()
}

async function forcePush(branch) {
  await $`git push -uf origin ${branch} --no-verify`
}


async function getPrefix(repoFullPath) {
  const fieldnewsWorkflowFullPath = `${repoFullPath}/.github/workflows/fieldnews.yml`

  if(!fs.existsSync(fieldnewsWorkflowFullPath)){
    return ''
  }

  const fieldnewsWorkflowFileContent = fs.readFileSync(fieldnewsWorkflowFullPath, 'utf8')
  const workflow  = YAML.parse(fieldnewsWorkflowFileContent)

  try {
    return workflow['jobs']['title-validation']['steps'][0]['with']['allowed_prefixes']
  }catch(e){
    console.log('no prefix fallback to empty string')
    return ''
  }
}
